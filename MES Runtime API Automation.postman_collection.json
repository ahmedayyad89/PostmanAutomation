{
	"info": {
		"_postman_id": "def75cb3-20b2-425d-b0e3-3c7d57f80d1c",
		"name": "MES Runtime API Automation",
		"description": "This page describe API for Runtime and wizards ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "equipment",
			"item": [
				{
					"name": "machines",
					"item": [
						{
							"name": "Get the JWT Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0753ab7a-9813-4276-8224-d1ce3d7ce2a4",
										"exec": [
											"var token = pm.response.json().id_token;",
											"pm.environment.set(\"accessToken\", token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "29c0ba8f-6938-4918-ae19-cd8ae223d13a",
										"exec": [
											"pm.globals.set(\"username\", \"admin\");",
											"pm.globals.set(\"password\", \"admin\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"legacyMesUrl\": \"<string>\",\n    \"password\": \"{{password}}\",\n    \"username\": \"{{username}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"legacyMesUrl\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/authenticate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authenticate",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "<object>"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"legacyMesUrl\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/authenticate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authenticate",
												"token"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"legacyMesUrl\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/authenticate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authenticate",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"legacyMesUrl\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/authenticate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authenticate",
												"token"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"legacyMesUrl\": \"<string>\",\n    \"password\": \"<string>\",\n    \"username\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/authenticate/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authenticate",
												"token"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve All Machines",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ad4823e-4669-4630-8561-e8a7cceae6eb",
										"exec": [
											"const machines = pm.response.json();",
											"",
											"",
											"pm.test(\"success request\", function(){",
											"    pm.expect(pm.response.code).to.equals(200);",
											"});",
											"",
											"pm.test(\"response size\", function(){",
											"    pm.expect(machines.length).to.greaterThan(0);",
											"});",
											"",
											"pm.test(\"response has name, configuration and header\", function(){",
											"     pm.expect(machines).to.be.an('array');",
											"    pm.expect(_.sample(machines)).to.have.property(\"name\");",
											"    pm.expect(_.sample(machines)).to.have.property(\"configuration\");",
											"    pm.expect(_.sample(machines)).to.have.property(\"header\");",
											"});",
											"",
											"pm.test(\"response validate header\", function(){",
											"    pm.expect(_.sample(machines).header).to.have.property(\"name\");",
											"    pm.expect(_.sample(machines).header).to.have.property(\"description\");",
											"    pm.expect(_.sample(machines).header).to.have.property(\"sapWorkCenters\");",
											"    pm.expect(_.sample(machines).header).to.have.property(\"type\");",
											"    pm.expect(_.sample(machines).header.sapWorkCenters).to.be.an('array');",
											"});",
											"",
											"pm.globals.set(\"machines\", machines);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"all"
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"configuration\": \"<object>\",\n  \"header\": {\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"sapWorkCenters\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  \"name\": \"<string>\"\n },\n {\n  \"configuration\": \"<object>\",\n  \"header\": {\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"sapWorkCenters\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  \"name\": \"<string>\"\n }\n]"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve All machine tools",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ca7c31d-3c77-492d-99b4-f23f090e6b87",
										"exec": [
											"const machinesRuntimes = pm.response.json();",
											"",
											"",
											"pm.test(\"success request\", function(){",
											"    pm.expect(pm.response.code).to.equals(200);",
											"});",
											"",
											"pm.test(\"response size\", function(){",
											"    pm.expect(machinesRuntimes.length).to.greaterThan(0);",
											"});",
											"",
											"pm.test(\"response has name, configuration and header\", function(){",
											"     pm.expect(machinesRuntimes).to.be.an('array');",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"name\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"configuration\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"lineClearanceStatus\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"lastLineClearanceStatusChange\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"safetyStatus\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"lastMachineStatusChange\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"machineStatus\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"actualProductionRate\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"actualCycleTime\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"activeCavities\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"cumulatedDurationTimeTicket\");",
											"    pm.expect(_.sample(machinesRuntimes)).to.have.property(\"lastTimeTicketSent\");",
											"});",
											"",
											"pm.test(\"response validate header\", function(){",
											"    pm.expect(_.sample(machinesRuntimes).header).to.have.property(\"name\");",
											"    pm.expect(_.sample(machinesRuntimes).header).to.have.property(\"description\");",
											"    pm.expect(_.sample(machinesRuntimes).header).to.have.property(\"sapWorkCenters\");",
											"    pm.expect(_.sample(machinesRuntimes).header).to.have.property(\"type\");",
											"    pm.expect(_.sample(machinesRuntimes).header.sapWorkCenters).to.be.an('array');",
											"});",
											"",
											"pm.globals.set(\"machinesRuntimes\", machinesRuntimes);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/all-runtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"all-runtime"
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all-runtime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all-runtime"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all-runtime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all-runtime"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all-runtime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all-runtime"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/all-runtime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"all-runtime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"activeCavities\": \"<long>\",\n  \"actualCycleTime\": {\n   \"unit\": \"<string>\",\n   \"value\": \"<number>\"\n  },\n  \"actualProductionRate\": \"<double>\",\n  \"configuration\": \"<object>\",\n  \"cumulatedDurationTimeTicket\": {\n   \"empty\": \"<boolean>\",\n   \"present\": \"<boolean>\"\n  },\n  \"header\": {\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"sapWorkCenters\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  \"lastLineClearanceStatusChange\": \"<dateTime>\",\n  \"lastMachineStatusChange\": \"<dateTime>\",\n  \"lastTimeTicketSent\": \"<dateTime>\",\n  \"lineClearanceStatus\": \"<string>\",\n  \"machineStatus\": {\n   \"category\": \"<string>\",\n   \"consumptionAllowed\": \"<boolean>\",\n   \"group\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"monitored\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"productionAllowed\": \"<boolean>\",\n   \"reasonCode\": \"<integer>\",\n   \"restartOperation\": \"<boolean>\",\n   \"scrapAllowed\": \"<boolean>\",\n   \"subGroup\": \"<string>\",\n   \"suspendOperation\": \"<boolean>\"\n  },\n  \"name\": \"<string>\",\n  \"safetyStatus\": \"<boolean>\"\n },\n {\n  \"activeCavities\": \"<long>\",\n  \"actualCycleTime\": {\n   \"unit\": \"<string>\",\n   \"value\": \"<number>\"\n  },\n  \"actualProductionRate\": \"<double>\",\n  \"configuration\": \"<object>\",\n  \"cumulatedDurationTimeTicket\": {\n   \"empty\": \"<boolean>\",\n   \"present\": \"<boolean>\"\n  },\n  \"header\": {\n   \"description\": \"<string>\",\n   \"name\": \"<string>\",\n   \"sapWorkCenters\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  \"lastLineClearanceStatusChange\": \"<dateTime>\",\n  \"lastMachineStatusChange\": \"<dateTime>\",\n  \"lastTimeTicketSent\": \"<dateTime>\",\n  \"lineClearanceStatus\": \"<string>\",\n  \"machineStatus\": {\n   \"category\": \"<string>\",\n   \"consumptionAllowed\": \"<boolean>\",\n   \"group\": \"<string>\",\n   \"hidden\": \"<boolean>\",\n   \"monitored\": \"<boolean>\",\n   \"name\": \"<string>\",\n   \"productionAllowed\": \"<boolean>\",\n   \"reasonCode\": \"<integer>\",\n   \"restartOperation\": \"<boolean>\",\n   \"scrapAllowed\": \"<boolean>\",\n   \"subGroup\": \"<string>\",\n   \"suspendOperation\": \"<boolean>\"\n  },\n  \"name\": \"<string>\",\n  \"safetyStatus\": \"<boolean>\"\n }\n]"
								}
							]
						},
						{
							"name": "Get machine",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "77dd5721-ce67-49f3-8a04-8553aaab2858",
										"exec": [
											"const machines = pm.globals.get(\"machines\"); ",
											"pm.globals.set(\"machineName\", _.sample(machines).name);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "89fefc79-2dc0-4fd1-97c1-2879c3b88cc1",
										"exec": [
											"pm.test(\"success request\", function(){",
											"    pm.expect(pm.response.code).to.equals(200);",
											"});",
											"",
											"pm.test(\"response has valid data\", function(){",
											"    const machine = pm.response.json().body;",
											"    pm.expect(pm.response.code).to.equals(200);",
											"    pm.expect(machine).to.have.property(\"name\");",
											"    pm.expect(machine).to.have.property(\"configuration\");",
											"    pm.expect(machine).to.have.property(\"sapWorkCenters\");",
											"    pm.expect(machine).to.have.property(\"type\");",
											"    pm.expect(machine).to.have.property(\"areaConfiguration\");",
											"    pm.expect(machine.sapWorkCenters).to.be.an('array');",
											"});",
											"",
											"pm.globals.unset('machineName');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine={{machineName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"name"
									],
									"query": [
										{
											"key": "action",
											"value": "NONE",
											"description": "action"
										},
										{
											"key": "machine",
											"value": "{{machineName}}",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get machine Failed",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "77dd5721-ce67-49f3-8a04-8553aaab2858",
										"exec": [
											"const machine = 'NNMMEE'; ",
											"pm.globals.set(\"machineName\", machine);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "89fefc79-2dc0-4fd1-97c1-2879c3b88cc1",
										"exec": [
											"pm.test(\"success request\", function(){",
											"    pm.expect(pm.response.code).to.equals(200);",
											"});",
											"",
											"pm.test(\"response has valid data\", function(){",
											"    const response = pm.response.json();",
											"    const message = _.sample(response.messages.filter((mess) => { return mess.code === \"MACHINE_NOT_FOUND\"}));",
											"    pm.expect(pm.response.code).to.equals(200);",
											"    pm.expect(message).to.have.property(\"code\");",
											"    pm.expect(message.code).to.equal(\"MACHINE_NOT_FOUND\");",
											"    pm.expect(message).to.have.property(\"defaultDescription\");",
											"    pm.expect(message).to.have.property(\"params\");",
											"    pm.expect(message.params).to.be.an(\"array\");",
											"    pm.expect(message).to.have.property('type');",
											"    pm.expect(message).to.have.property('actionToResolve');",
											"    pm.expect(message.type).to.equal('ERROR');",
											"});",
											"",
											"pm.globals.unset('machineName');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine={{machineName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"name"
									],
									"query": [
										{
											"key": "action",
											"value": "NONE",
											"description": "action"
										},
										{
											"key": "machine",
											"value": "{{machineName}}",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get machine with Runtime data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9f062970-9f12-4fbe-8cc2-2cd359f6ccba",
										"exec": [
											"const machines = pm.globals.get(\"machinesRuntimes\"); ",
											"pm.globals.set(\"machineName\", _.sample(machines).name);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "86002ff7-6b1b-4368-8b2c-1b2c52af8793",
										"exec": [
											"pm.test(\"success request\", function(){",
											"    pm.expect(pm.response.code).to.equals(200);",
											"});",
											"",
											"pm.test(\"response has valid data\", function(){",
											"    const machine = pm.response.json().body;",
											"    pm.expect(pm.response.code).to.equals(200);",
											"    pm.expect(machine).to.have.property(\"name\");",
											"    pm.expect(machine).to.have.property(\"configuration\");",
											"    pm.expect(machine).to.have.property(\"sapWorkCenters\");",
											"    pm.expect(machine).to.have.property(\"type\");",
											"    pm.expect(machine).to.have.property(\"areaConfiguration\");",
											"    pm.expect(machine.sapWorkCenters).to.be.an('array');",
											"    pm.expect(machine).to.have.property(\"lineClearanceStatus\");",
											"    pm.expect(machine).to.have.property(\"lastLineClearanceStatusChange\");",
											"    pm.expect(machine).to.have.property(\"safetyStatus\");",
											"    pm.expect(machine).to.have.property(\"lastMachineStatusChange\");",
											"    pm.expect(machine).to.have.property(\"machineStatus\");",
											"    pm.expect(machine).to.have.property(\"actualProductionRate\");",
											"    pm.expect(machine).to.have.property(\"actualCycleTime\");",
											"    pm.expect(machine).to.have.property(\"activeCavities\");",
											"    pm.expect(machine).to.have.property(\"cumulatedDurationTimeTicket\");",
											"    pm.expect(machine).to.have.property(\"lastTimeTicketSent\");",
											"});",
											"",
											"pm.globals.unset('machineName');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine={{machineName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"runtime",
										"name"
									],
									"query": [
										{
											"key": "action",
											"value": "NONE",
											"description": "action"
										},
										{
											"key": "machine",
											"value": "{{machineName}}",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get machine with Runtime data Failed",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9f062970-9f12-4fbe-8cc2-2cd359f6ccba",
										"exec": [
											"const machine = 'NNMMEE'; ",
											"pm.globals.set(\"machineName\", machine);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "86002ff7-6b1b-4368-8b2c-1b2c52af8793",
										"exec": [
											"pm.test(\"success request\", function(){",
											"    pm.expect(pm.response.code).to.equals(200);",
											"});",
											"",
											"pm.test(\"response has valid data\", function(){",
											"    const response = pm.response.json();",
											"    const message = _.sample(response.messages.filter((mess) => { return mess.code === \"MACHINE_NOT_FOUND\"}));",
											"    pm.expect(pm.response.code).to.equals(200);",
											"    pm.expect(message).to.have.property(\"code\");",
											"    pm.expect(message.code).to.equal(\"MACHINE_NOT_FOUND\");",
											"    pm.expect(message).to.have.property(\"defaultDescription\");",
											"    pm.expect(message).to.have.property(\"params\");",
											"    pm.expect(message.params).to.be.an(\"array\");",
											"    pm.expect(message).to.have.property('type');",
											"    pm.expect(message).to.have.property('actionToResolve');",
											"    pm.expect(message.type).to.equal('ERROR');",
											"});",
											"",
											"pm.globals.unset('machineName');",
											"postman.setNextRequest('Retrieve All Tool Assignments');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine={{machineName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"runtime",
										"name"
									],
									"query": [
										{
											"key": "action",
											"value": "NONE",
											"description": "action"
										},
										{
											"key": "machine",
											"value": "{{machineName}}",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/runtime/name?action=NONE&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"runtime",
												"name"
											],
											"query": [
												{
													"key": "action",
													"value": "NONE"
												},
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve Machine Runtime List filtered by Station",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b18cd436-bf30-438c-b3d1-00ab05585b33",
										"exec": [
											"const machines = pm.globals.get(\"machinesRuntimes\"); ",
											"pm.globals.set(\"present\", false);",
											"pm.globals.set(\"machineName\", _.sample(machines).name);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/station?description=stri&equipmentGroupId.present={{present}}&id=0&name={{machineName}}&printers[0].description=string&printers[0].name=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"station"
									],
									"query": [
										{
											"key": "description",
											"value": "stri"
										},
										{
											"key": "equipmentGroupId.present",
											"value": "{{present}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name",
											"value": "{{machineName}}"
										},
										{
											"key": "printers[0].description",
											"value": "string"
										},
										{
											"key": "printers[0].name",
											"value": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/station?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"station"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/station?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"station"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/station?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"station"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/station?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"station"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve All Tool Assignments",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1a231f5-050f-4f69-9f9f-10a964f04493",
										"exec": [
											"pm.test(\"success request\", function(){",
											"    pm.expect(pm.response.code).to.equals(200);",
											"});",
											"",
											"pm.test(\"response has valid data\", function(){",
											"    const tools = pm.response.json();",
											"    pm.expect(pm.response.code).to.equals(200);",
											"    pm.expect(tools).to.be.an(\"array\");",
											"    const tool = _.sample(tools);",
											"    pm.expect(tool).to.have.property(\"sapWorkCenter\");",
											"    pm.expect(tool).to.have.property(\"toolName\");",
											"    pm.expect(tool.sapWorkCenter).to.be.a(\"string\");",
											"    pm.expect(tool.toolName).to.be.a(\"string\");",
											"});",
											"",
											"postman.setNextRequest(null);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/tools/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"tools",
										""
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/tools/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"tools",
												""
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/tools/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"tools",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/tools/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"tools",
												""
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/tools/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"tools",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "action",
					"item": [
						{
							"name": "Filter Machine for action",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3NjYyMDk2Mn0.1ruH28tvAgO6SfT_zq7iEkGjExCe90qy3vydZO_kYFqTCVyXaT9UpgCLJUDcF7KYMWdQC-VqHnPHacXeBRtoYA",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/action?action=INFORMATION_EVENT_HOPPER&station.description=asdfsadf&station.equipmentGroupId.present=false&station.id=25623&station.name=desktop&station.printers.description=asdfasdf&station.printers.name=asdasdf",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"action"
									],
									"query": [
										{
											"key": "action",
											"value": "INFORMATION_EVENT_HOPPER",
											"description": "action"
										},
										{
											"key": "station.description",
											"value": "asdfsadf"
										},
										{
											"key": "station.equipmentGroupId.present",
											"value": "false"
										},
										{
											"key": "station.id",
											"value": "25623"
										},
										{
											"key": "station.name",
											"value": "desktop"
										},
										{
											"key": "station.printers.description",
											"value": "asdfasdf"
										},
										{
											"key": "station.printers.name",
											"value": "asdasdf"
										},
										{
											"key": "station",
											"value": "desktop",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Machine Validation",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/machines/action/validate?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"machines",
										"action",
										"validate"
									],
									"query": [
										{
											"key": "action",
											"value": "<string>",
											"description": "action"
										},
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "equipmentGroupId.present",
											"value": "<boolean>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "printers[0].description",
											"value": "<string>"
										},
										{
											"key": "printers[0].name",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action/validate?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action",
												"validate"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action/validate?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action",
												"validate"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action/validate?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action",
												"validate"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/machines/action/validate?action=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"machines",
												"action",
												"validate"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cavity Management",
					"item": [
						{
							"name": "Running Operation for the machine and the tool",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/cavityManagement/operation?machine=<string>&tool=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"cavityManagement",
										"operation"
									],
									"query": [
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										},
										{
											"key": "tool",
											"value": "<string>",
											"description": "tool"
										}
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/operation?machine=<string>&tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"operation"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/operation?machine=<string>&tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"operation"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/operation?machine=<string>&tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"operation"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/operation?machine=<string>&tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"operation"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "cavityManagement",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/cavityManagement/updateCavities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"cavityManagement",
										"updateCavities"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/updateCavities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"updateCavities"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/updateCavities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"updateCavities"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/updateCavities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"updateCavities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/updateCavities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"updateCavities"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/updateCavities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"updateCavities"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Tool Validation",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/cavityManagement/validateTool",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"cavityManagement",
										"validateTool"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"validateTool"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"validateTool"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"validateTool"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"validateTool"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cavities\": [\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        },\n        {\n            \"active\": \"<boolean>\",\n            \"code\": \"<string>\",\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\",\n            \"satellite\": \"<string>\",\n            \"spare\": \"<boolean>\"\n        }\n    ],\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"toolName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/cavityManagement/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"cavityManagement",
												"validateTool"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "link Silo Tank",
					"item": [
						{
							"name": "Validate Dryer",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/linkSiloTank/dryer/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"linkSiloTank",
										"dryer",
										"validate"
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryer/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryer",
												"validate"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryer/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryer",
												"validate"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryer/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryer",
												"validate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"body\": {\n  \"actionsToResolve\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"valid\": \"<boolean>\"\n },\n \"messages\": [\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  }\n ],\n \"result\": \"<string>\",\n \"status\": \"<integer>\"\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryer/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryer",
												"validate"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryer/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryer",
												"validate"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "List Dryers",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/linkSiloTank/dryers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"linkSiloTank",
										"dryers"
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryers"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"body\": [\n  {\n   \"description\": \"<string>\",\n   \"materialContainerName\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"description\": \"<string>\",\n   \"materialContainerName\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"messages\": [\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  }\n ],\n \"result\": \"<string>\",\n \"status\": \"<integer>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryers"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/dryers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"dryers"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Load machine",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/linkSiloTank/machine?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"linkSiloTank",
										"machine"
									],
									"query": [
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "equipmentGroupId.present",
											"value": "<boolean>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "printers[0].description",
											"value": "<string>"
										},
										{
											"key": "printers[0].name",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/machine?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"machine"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/machine?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"machine"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/machine?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"machine"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"body\": {\n  \"connectedMaterialContainers\": [\n   {\n    \"material\": \"<string>\",\n    \"name\": \"<string>\",\n    \"quantity\": {\n     \"baseUnitValue\": \"<number>\",\n     \"unit\": {\n      \"baseUnit\": \"<string>\",\n      \"baseUnitConversion\": \"<number>\",\n      \"unit\": \"<string>\"\n     },\n     \"value\": \"<number>\",\n     \"zero\": \"<boolean>\"\n    },\n    \"type\": \"<string>\"\n   },\n   {\n    \"material\": \"<string>\",\n    \"name\": \"<string>\",\n    \"quantity\": {\n     \"baseUnitValue\": \"<number>\",\n     \"unit\": {\n      \"baseUnit\": \"<string>\",\n      \"baseUnitConversion\": \"<number>\",\n      \"unit\": \"<string>\"\n     },\n     \"value\": \"<number>\",\n     \"zero\": \"<boolean>\"\n    },\n    \"type\": \"<string>\"\n   }\n  ],\n  \"name\": \"<string>\",\n  \"operations\": [\n   {\n    \"bomItems\": [\n     {\n      \"actualQuantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      },\n      \"backFlush\": \"<boolean>\",\n      \"inputPoint\": \"<string>\",\n      \"itemName\": \"<string>\",\n      \"material\": \"<string>\",\n      \"materialContainer\": \"<string>\",\n      \"materialDescription\": \"<string>\",\n      \"quantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      }\n     },\n     {\n      \"actualQuantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      },\n      \"backFlush\": \"<boolean>\",\n      \"inputPoint\": \"<string>\",\n      \"itemName\": \"<string>\",\n      \"material\": \"<string>\",\n      \"materialContainer\": \"<string>\",\n      \"materialDescription\": \"<string>\",\n      \"quantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      }\n     }\n    ],\n    \"material\": \"<string>\",\n    \"materialDescription\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"productionOrder\": \"<string>\",\n    \"sapWorkCenter\": \"<string>\",\n    \"status\": \"<string>\"\n   },\n   {\n    \"bomItems\": [\n     {\n      \"actualQuantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      },\n      \"backFlush\": \"<boolean>\",\n      \"inputPoint\": \"<string>\",\n      \"itemName\": \"<string>\",\n      \"material\": \"<string>\",\n      \"materialContainer\": \"<string>\",\n      \"materialDescription\": \"<string>\",\n      \"quantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      }\n     },\n     {\n      \"actualQuantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      },\n      \"backFlush\": \"<boolean>\",\n      \"inputPoint\": \"<string>\",\n      \"itemName\": \"<string>\",\n      \"material\": \"<string>\",\n      \"materialContainer\": \"<string>\",\n      \"materialDescription\": \"<string>\",\n      \"quantity\": {\n       \"baseUnitValue\": \"<number>\",\n       \"unit\": {\n        \"baseUnit\": \"<string>\",\n        \"baseUnitConversion\": \"<number>\",\n        \"unit\": \"<string>\"\n       },\n       \"value\": \"<number>\",\n       \"zero\": \"<boolean>\"\n      }\n     }\n    ],\n    \"material\": \"<string>\",\n    \"materialDescription\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\",\n    \"productionOrder\": \"<string>\",\n    \"sapWorkCenter\": \"<string>\",\n    \"status\": \"<string>\"\n   }\n  ]\n },\n \"messages\": [\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  }\n ],\n \"result\": \"<string>\",\n \"status\": \"<integer>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/machine?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"machine"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validate MaterialContainer",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bomItem\": \"<string>\",\n    \"machine\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainer/validate?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"linkSiloTank",
										"materialContainer",
										"validate"
									],
									"query": [
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "equipmentGroupId.present",
											"value": "<boolean>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "printers[0].description",
											"value": "<string>"
										},
										{
											"key": "printers[0].name",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"machine\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainer/validate?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainer",
												"validate"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"machine\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainer/validate?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainer",
												"validate"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"machine\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainer/validate?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainer",
												"validate"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"machine\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainer/validate?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainer",
												"validate"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"machine\": \"<string>\",\n    \"name\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainer/validate?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainer",
												"validate"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "List MaterialContainers",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainers?bomItem=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&operation=<string>&printers[0].description=<string>&printers[0].name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"linkSiloTank",
										"materialContainers"
									],
									"query": [
										{
											"key": "bomItem",
											"value": "<string>",
											"description": "bomItem"
										},
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "equipmentGroupId.present",
											"value": "<boolean>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "operation",
											"value": "<string>",
											"description": "operation"
										},
										{
											"key": "printers[0].description",
											"value": "<string>"
										},
										{
											"key": "printers[0].name",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainers?bomItem=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&operation=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainers"
											],
											"query": [
												{
													"key": "bomItem",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainers?bomItem=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&operation=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainers"
											],
											"query": [
												{
													"key": "bomItem",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"body\": [\n  {\n   \"material\": \"<string>\",\n   \"name\": \"<string>\",\n   \"quantity\": {\n    \"baseUnitValue\": \"<number>\",\n    \"unit\": {\n     \"baseUnit\": \"<string>\",\n     \"baseUnitConversion\": \"<number>\",\n     \"unit\": \"<string>\"\n    },\n    \"value\": \"<number>\",\n    \"zero\": \"<boolean>\"\n   },\n   \"type\": \"<string>\"\n  },\n  {\n   \"material\": \"<string>\",\n   \"name\": \"<string>\",\n   \"quantity\": {\n    \"baseUnitValue\": \"<number>\",\n    \"unit\": {\n     \"baseUnit\": \"<string>\",\n     \"baseUnitConversion\": \"<number>\",\n     \"unit\": \"<string>\"\n    },\n    \"value\": \"<number>\",\n    \"zero\": \"<boolean>\"\n   },\n   \"type\": \"<string>\"\n  }\n ],\n \"messages\": [\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  }\n ],\n \"result\": \"<string>\",\n \"status\": \"<integer>\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainers?bomItem=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&operation=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainers"
											],
											"query": [
												{
													"key": "bomItem",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/materialContainers?bomItem=<string>&description=<string>&equipmentGroupId.present=<boolean>&id=<long>&machine=<string>&name=<string>&operation=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"materialContainers"
											],
											"query": [
												{
													"key": "bomItem",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "machine",
													"value": "<string>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "operation",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Link Silo/Tank to Machine",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bomItem\": \"<string>\",\n    \"dryer\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machine\": \"<string>\",\n    \"materialContainer\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/linkSiloTank/save?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"linkSiloTank",
										"save"
									],
									"query": [
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "equipmentGroupId.present",
											"value": "<boolean>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "printers[0].description",
											"value": "<string>"
										},
										{
											"key": "printers[0].name",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"dryer\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machine\": \"<string>\",\n    \"materialContainer\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/save?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"save"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"dryer\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machine\": \"<string>\",\n    \"materialContainer\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/save?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"save"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"dryer\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machine\": \"<string>\",\n    \"materialContainer\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/save?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"save"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"dryer\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machine\": \"<string>\",\n    \"materialContainer\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/save?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"save"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bomItem\": \"<string>\",\n    \"dryer\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machine\": \"<string>\",\n    \"materialContainer\": \"<string>\",\n    \"operation\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/linkSiloTank/save?description=<string>&equipmentGroupId.present=<boolean>&id=<long>&name=<string>&printers[0].description=<string>&printers[0].name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"linkSiloTank",
												"save"
											],
											"query": [
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "equipmentGroupId.present",
													"value": "<boolean>"
												},
												{
													"key": "id",
													"value": "<long>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "printers[0].description",
													"value": "<string>"
												},
												{
													"key": "printers[0].name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "mount Tool",
					"item": [
						{
							"name": "Mount Tool",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/mountTool/mountTool",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"mountTool",
										"mountTool"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/mountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"mountTool"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/mountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"mountTool"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/mountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"mountTool"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/mountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"mountTool"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/mountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"mountTool"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Running Operations for the machine",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/mountTool/operations?machine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"mountTool",
										"operations"
									],
									"query": [
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Tool Validation",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/mountTool/validateTool",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"mountTool",
										"validateTool"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"validateTool"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"validateTool"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"validateTool"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"validateTool"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToMount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/mountTool/validateTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"mountTool",
												"validateTool"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "set Actual Cycle Time",
					"item": [
						{
							"name": "Running Operations for the machine",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/setActualCycleTime/operations?machine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"setActualCycleTime",
										"operations"
									],
									"query": [
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Actual Cycle Time",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cycleTime\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/setActualCycleTime/setActualCycleTime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"setActualCycleTime",
										"setActualCycleTime"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cycleTime\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/setActualCycleTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"setActualCycleTime"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cycleTime\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/setActualCycleTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"setActualCycleTime"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cycleTime\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/setActualCycleTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"setActualCycleTime"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cycleTime\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/setActualCycleTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"setActualCycleTime"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cycleTime\": \"<string>\",\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualCycleTime/setActualCycleTime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualCycleTime",
												"setActualCycleTime"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "set Actual Production Rate",
					"item": [
						{
							"name": "Running Operations for the machine",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/setActualProductionRate/operations?machine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"setActualProductionRate",
										"operations"
									],
									"query": [
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Actual Production Rate",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\",\n    \"productionRate\": \"<double>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/setActualProductionRate/setActualProductionRate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"setActualProductionRate",
										"setActualProductionRate"
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\",\n    \"productionRate\": \"<double>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/setActualProductionRate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"setActualProductionRate"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\",\n    \"productionRate\": \"<double>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/setActualProductionRate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"setActualProductionRate"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\",\n    \"productionRate\": \"<double>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/setActualProductionRate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"setActualProductionRate"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\",\n    \"productionRate\": \"<double>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/setActualProductionRate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"setActualProductionRate"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"logbookRequest\": {\n        \"comment\": \"<string>\",\n        \"logbookName\": \"<string>\",\n        \"reasonChoiceList\": \"<string>\"\n    },\n    \"machineName\": \"<string>\",\n    \"productionRate\": \"<double>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/setActualProductionRate/setActualProductionRate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"setActualProductionRate",
												"setActualProductionRate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "tools",
					"item": [
						{
							"name": "Retrieve tools assignments",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/tools?machine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"tools"
									],
									"query": [
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"body\": \"<object>\",\n \"messages\": [\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  }\n ],\n \"result\": \"<string>\",\n \"status\": \"<integer>\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve mold cavities",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/tools/cavities?includeSpare=<boolean>&mold=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"tools",
										"cavities"
									],
									"query": [
										{
											"key": "includeSpare",
											"value": "<boolean>",
											"description": "includeSpare"
										},
										{
											"key": "mold",
											"value": "<string>",
											"description": "mold"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/cavities?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"cavities"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/cavities?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"cavities"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"body\": [\n  {\n   \"active\": \"<boolean>\",\n   \"code\": \"<string>\",\n   \"name\": \"<string>\",\n   \"number\": \"<integer>\",\n   \"satellite\": \"<string>\",\n   \"spare\": \"<boolean>\"\n  },\n  {\n   \"active\": \"<boolean>\",\n   \"code\": \"<string>\",\n   \"name\": \"<string>\",\n   \"number\": \"<integer>\",\n   \"satellite\": \"<string>\",\n   \"spare\": \"<boolean>\"\n  }\n ],\n \"messages\": [\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  }\n ],\n \"result\": \"<string>\",\n \"status\": \"<integer>\"\n}"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/cavities?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"cavities"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/cavities?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"cavities"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve mold",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/tools/mold?includeSpare=<boolean>&mold=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"tools",
										"mold"
									],
									"query": [
										{
											"key": "includeSpare",
											"value": "<boolean>",
											"description": "includeSpare"
										},
										{
											"key": "mold",
											"value": "<string>",
											"description": "mold"
										}
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/mold?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"mold"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/mold?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"mold"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/mold?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"mold"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/mold?includeSpare=<boolean>&mold=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"mold"
											],
											"query": [
												{
													"key": "includeSpare",
													"value": "<boolean>"
												},
												{
													"key": "mold",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"body\": {\n  \"cavities\": [\n   {\n    \"active\": \"<boolean>\",\n    \"code\": \"<string>\",\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\",\n    \"satellite\": \"<string>\",\n    \"spare\": \"<boolean>\"\n   },\n   {\n    \"active\": \"<boolean>\",\n    \"code\": \"<string>\",\n    \"name\": \"<string>\",\n    \"number\": \"<integer>\",\n    \"satellite\": \"<string>\",\n    \"spare\": \"<boolean>\"\n   }\n  ],\n  \"cavityManagement\": \"<string>\",\n  \"description\": \"<string>\",\n  \"toolName\": \"<string>\",\n  \"version\": \"<string>\"\n },\n \"messages\": [\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  },\n  {\n   \"code\": \"<string>\",\n   \"defaultDescription\": \"<string>\",\n   \"params\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"type\": \"<string>\"\n  }\n ],\n \"result\": \"<string>\",\n \"status\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "Retrieve tool operations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/tools/operations?tool=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"tools",
										"operations"
									],
									"query": [
										{
											"key": "tool",
											"value": "<string>",
											"description": "tool"
										}
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/operations?tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"operations"
											],
											"query": [
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/operations?tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"operations"
											],
											"query": [
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/operations?tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"operations"
											],
											"query": [
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "null"
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/operations?tool=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"operations"
											],
											"query": [
												{
													"key": "tool",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve machine tools and operations",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/tools/toolAndOperations?machine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"tools",
										"toolAndOperations"
									],
									"query": [
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/toolAndOperations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"toolAndOperations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/toolAndOperations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"toolAndOperations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/toolAndOperations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"toolAndOperations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "null"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/tools/toolAndOperations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"tools",
												"toolAndOperations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "unmount Tool",
					"item": [
						{
							"name": "Running Operations on the machine that is using the tool",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/equipment/unmountTool/operations?machine=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"unmountTool",
										"operations"
									],
									"query": [
										{
											"key": "machine",
											"value": "<string>",
											"description": "machine"
										}
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/operations?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"operations"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Unmount Tool",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToUnmount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/equipment/unmountTool/unmountTool",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"equipment",
										"unmountTool",
										"unmountTool"
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToUnmount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/unmountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"unmountTool"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToUnmount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/unmountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"unmountTool"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToUnmount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/unmountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"unmountTool"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToUnmount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/unmountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"unmountTool"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"machineName\": \"<string>\",\n    \"toolsToUnmount\": [\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        },\n        {\n            \"logbookRequest\": {\n                \"comment\": \"<string>\",\n                \"logbookName\": \"<string>\",\n                \"reasonChoiceList\": \"<string>\"\n            },\n            \"operationFullName\": \"<string>\",\n            \"toolName\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/equipment/unmountTool/unmountTool",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"equipment",
												"unmountTool",
												"unmountTool"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "automation",
			"item": [
				{
					"name": "public",
					"item": [
						{
							"name": "configuration",
							"item": [
								{
									"name": "Retrieve ConfigMap. Deprecated. Prefer /public/configuration/mobile",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"configuration"
											]
										}
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve ConfigMap per area and machine",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/configuration/action?action=<string>&machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"configuration",
												"action"
											],
											"query": [
												{
													"key": "action",
													"value": "<string>",
													"description": "action"
												},
												{
													"key": "machine",
													"value": "<string>",
													"description": "machine"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/action?action=<string>&machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"action"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/action?action=<string>&machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"action"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/action?action=<string>&machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"action"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/action?action=<string>&machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"action"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve ConfigMap per area",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/configuration/area?area=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"configuration",
												"area"
											],
											"query": [
												{
													"key": "area",
													"value": "<string>",
													"description": "area"
												}
											]
										}
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/area?area=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"area"
													],
													"query": [
														{
															"key": "area",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/area?area=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"area"
													],
													"query": [
														{
															"key": "area",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/area?area=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"area"
													],
													"query": [
														{
															"key": "area",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/area?area=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"area"
													],
													"query": [
														{
															"key": "area",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve ConfigMap per machine",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/configuration/machine?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"configuration",
												"machine"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>",
													"description": "machine"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/machine?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"machine"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/machine?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"machine"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/machine?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"machine"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/machine?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"machine"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve Angular Mobile Configuration",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/configuration/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"configuration",
												"mobile"
											]
										}
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/mobile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"mobile"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/mobile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"mobile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/mobile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"mobile"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/configuration/mobile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"configuration",
														"mobile"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "example",
							"item": [
								{
									"name": "Return a domain exception message, thrown by DDD",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/example/domainException",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"example",
												"domainException"
											]
										}
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/domainException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"domainException"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/domainException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"domainException"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/domainException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"domainException"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/domainException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"domainException"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Return a standard sucess message",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/example/success",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"example",
												"success"
											]
										}
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/success",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"success"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/success",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"success"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/success",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"success"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/success",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"success"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Return a technical exception message, thrown for unknown reason",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/example/technicalException",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"example",
												"technicalException"
											]
										}
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/technicalException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"technicalException"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/technicalException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"technicalException"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/technicalException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"technicalException"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/example/technicalException",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"example",
														"technicalException"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "i18n",
							"item": [
								{
									"name": "Download the i18n json file for angular desktop",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/i18n/desktop/:locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"i18n",
												"desktop",
												":locale"
											],
											"variable": [
												{
													"key": "locale",
													"value": "<string>",
													"description": "locale"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/desktop/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"desktop",
														"<string>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/desktop/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"desktop",
														"<string>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<object>"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/desktop/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"desktop",
														"<string>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/desktop/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"desktop",
														"<string>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download the i18n json file for angular mobile",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/i18n/mobile/:locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"i18n",
												"mobile",
												":locale"
											],
											"variable": [
												{
													"key": "locale",
													"value": "<string>",
													"description": "locale"
												}
											]
										}
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/mobile/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"mobile",
														"<string>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/mobile/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"mobile",
														"<string>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/mobile/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"mobile",
														"<string>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/public/i18n/mobile/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"public",
														"i18n",
														"mobile",
														"<string>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<object>"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Info",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/public/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public",
										"info"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"info"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"info"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"info"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve enabled logbook",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/public/logbook/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public",
										"logbook",
										"enabled"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/logbook/enabled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"logbook",
												"enabled"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/logbook/enabled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"logbook",
												"enabled"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/logbook/enabled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"logbook",
												"enabled"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/logbook/enabled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"logbook",
												"enabled"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "List of group with their privileges",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/public/privilege/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public",
										"privilege",
										"groups"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/privilege/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"privilege",
												"groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/privilege/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"privilege",
												"groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/privilege/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"privilege",
												"groups"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/privilege/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"privilege",
												"groups"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "List of wizards",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/public/wizard/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public",
										"wizard",
										"list"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"wizard",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"wizard",
												"list"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"wizard",
												"list"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/public/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"wizard",
												"list"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "sap",
					"item": [
						{
							"name": "operation",
							"item": [
								{
									"name": "Retrieve All Machines",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sap/operation/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sap",
												"operation",
												"all"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "null"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve All Operation Runtime",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sap/operation/all-runtime",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sap",
												"operation",
												"all-runtime"
											]
										}
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all-runtime",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all-runtime"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all-runtime",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all-runtime"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "null"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all-runtime",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all-runtime"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sap/operation/all-runtime",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sap",
														"operation",
														"all-runtime"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "cache",
					"item": [
						{
							"name": "clear",
							"item": [
								{
									"name": "Clear all cache regions",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cache/clear",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cache",
												"clear"
											]
										}
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Clear specific cache regions",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cache/clear/:regionName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cache",
												"clear",
												":regionName"
											],
											"variable": [
												{
													"key": "regionName",
													"value": "<string>",
													"description": "regionName"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear",
														"<string>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear",
														"<string>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear",
														"<string>"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/cache/clear/<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cache",
														"clear",
														"<string>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Display info about cache in logs",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cache/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cache",
										"info"
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cache/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cache",
												"info"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cache/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cache",
												"info"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cache/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cache",
												"info"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cache/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cache",
												"info"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "wizard",
					"item": [
						{
							"name": "print pallet label",
							"item": [
								{
									"name": "print pallet label",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"printer\": \"printer1\",\n    \"pallet\": \"00000015019000000712\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/wizard/print-pallet-label/print",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"print-pallet-label",
												"print"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Pallet by name or storageUnit name",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/print-pallet-label/pallet?name=00000015012420005039",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"print-pallet-label",
												"pallet"
											],
											"query": [
												{
													"key": "name",
													"value": "00000015012420005039",
													"description": "name"
												}
											]
										}
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "print Label",
							"item": [
								{
									"name": "print label",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3Mjk5MDQ4Mn0.A99WtAwCwuI0lfroZcnMrbjQH985cYRmP8E01J5eGaKC6ao21lYBKt_ROl8KKrzlqatgqzFbH-_WWplycoEFUg",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"printer\": \"printer\",\n    \"suName\": \"00000015019000000842\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/wizard/printLabel/print",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"printLabel",
												"print"
											]
										}
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printer\": \"<string>\",\n    \"suName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/print",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"print"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get StorageUnit or Pallet by name",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3Mjk5MDQ4Mn0.A99WtAwCwuI0lfroZcnMrbjQH985cYRmP8E01J5eGaKC6ao21lYBKt_ROl8KKrzlqatgqzFbH-_WWplycoEFUg",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=00000015012420005038",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"printLabel",
												"storage-unit"
											],
											"query": [
												{
													"key": "name",
													"value": "00000015012420005038",
													"description": "name"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printLabel/storage-unit?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printLabel",
														"storage-unit"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "printer",
							"item": [
								{
									"name": "List Printers",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/printer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"printer"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/printer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validate Printer",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"printerName\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/wizard/printer/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"printer",
												"validate"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printerName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printer/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer",
														"validate"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printerName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printer/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer",
														"validate"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printerName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printer/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer",
														"validate"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printerName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printer/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer",
														"validate"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"printerName\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/wizard/printer/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"printer",
														"validate"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "view Production Order",
							"item": [
								{
									"name": "Detailed information for the specified production order name",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3NTMxNjg1M30.XEEsUSql_kqHNqY3d3uVFuJ8gdXcf2qfwQ7BnC2y7JWXi2KcAtnLa0HrJXSZA8NGc14HurqmwY8_nou-ccb7aw",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/view-production-order/details?productionOrder=000101112442",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"view-production-order",
												"details"
											],
											"query": [
												{
													"key": "productionOrder",
													"value": "000101112442",
													"description": "productionOrder"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Header information for the specified production order name Copy",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3NTMxNjg1M30.XEEsUSql_kqHNqY3d3uVFuJ8gdXcf2qfwQ7BnC2y7JWXi2KcAtnLa0HrJXSZA8NGc14HurqmwY8_nou-ccb7aw",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/view-production-order/header?productionOrder=000101112442",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"view-production-order",
												"header"
											],
											"query": [
												{
													"key": "productionOrder",
													"value": "000101112442",
													"description": "productionOrder"
												}
											]
										}
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/details?productionOrder=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"details"
													],
													"query": [
														{
															"key": "productionOrder",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "List of all the production orders or the ones for the specified machine name",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/viewProductionOrder/list?machine=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"viewProductionOrder",
												"list"
											],
											"query": [
												{
													"key": "machine",
													"value": "<string>",
													"description": "machine"
												}
											]
										}
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/list?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"list"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/list?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"list"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/list?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"list"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/list?machine=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"list"
													],
													"query": [
														{
															"key": "machine",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Check if the passed parameter is a VALUE_TYPE.MACHINE or a VALUE_TYPE.PO or VALUE_TYPE.ERR if neither",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/viewProductionOrder/validate?value=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"viewProductionOrder",
												"validate"
											],
											"query": [
												{
													"key": "value",
													"value": "<string>",
													"description": "value"
												}
											]
										}
									},
									"response": [
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/validate?value=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"validate"
													],
													"query": [
														{
															"key": "value",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/validate?value=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"validate"
													],
													"query": [
														{
															"key": "value",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/validate?value=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"validate"
													],
													"query": [
														{
															"key": "value",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/wizard/viewProductionOrder/validate?value=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wizard",
														"viewProductionOrder",
														"validate"
													],
													"query": [
														{
															"key": "value",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "inforamtion event sample",
							"item": [
								{
									"name": "details",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3Mzc2MTkzMX0.rs3b-UZGW97V4IuKFnhmSA7Tpr0Nhy2rjoDmsXPlcXZ-N7P3-H74Dx2I0HQriDLKYWrXm_M7JyDGzfpuOdwDJw",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"productionOrder\": \"000101112442\",\n\t\"sampleTypes\": [\"AC\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/production/information-event-sample/details",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"production",
												"information-event-sample",
												"details"
											]
										}
									},
									"response": []
								},
								{
									"name": "get samples Copy",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3Mzc2MTkzMX0.rs3b-UZGW97V4IuKFnhmSA7Tpr0Nhy2rjoDmsXPlcXZ-N7P3-H74Dx2I0HQriDLKYWrXm_M7JyDGzfpuOdwDJw",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"productionOrder\": \"000101112442\",\n\t\"sampleTypes\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/production/information-event-sample/type?name=000101113058",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"production",
												"information-event-sample",
												"type"
											],
											"query": [
												{
													"key": "name",
													"value": "000101113058"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "validate samples",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3Mzc2MTkzMX0.rs3b-UZGW97V4IuKFnhmSA7Tpr0Nhy2rjoDmsXPlcXZ-N7P3-H74Dx2I0HQriDLKYWrXm_M7JyDGzfpuOdwDJw",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"productionOrder\": \"000101112499\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/production/information-event-sample/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"production",
												"information-event-sample",
												"validate"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "inforamtion event sample Copy",
							"item": [
								{
									"name": "get samples",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3NTMxNjg1M30.XEEsUSql_kqHNqY3d3uVFuJ8gdXcf2qfwQ7BnC2y7JWXi2KcAtnLa0HrJXSZA8NGc14HurqmwY8_nou-ccb7aw",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/wizard/information-event-sample/details?productionOrder=000101112442&type=AC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"information-event-sample",
												"details"
											],
											"query": [
												{
													"key": "productionOrder",
													"value": "000101112442"
												},
												{
													"key": "type",
													"value": "AC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "types",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3NTMxNjg1M30.XEEsUSql_kqHNqY3d3uVFuJ8gdXcf2qfwQ7BnC2y7JWXi2KcAtnLa0HrJXSZA8NGc14HurqmwY8_nou-ccb7aw",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"productionOrder\": \"000101112442\",\n\t\"sampleTypes\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/wizard/information-event-sample/type?productionOrder=000101113058",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"information-event-sample",
												"type"
											],
											"query": [
												{
													"key": "productionOrder",
													"value": "000101113058"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "validate samples",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3NDk3NzI2NX0.bc0BoF_r8Sxx3J6iidkii8jHJg42lns85L6N6P5OgJ8oF0s-4qbxDzqTbU2fQSWJt_rTb42XtRNql4mGOTIXpw",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/wizard/information-event-sample/validate?productionOrder=000101112442",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"information-event-sample",
												"validate"
											],
											"query": [
												{
													"key": "productionOrder",
													"value": "000101112442"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "information event hopper",
							"item": [
								{
									"name": "Machine Operations",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{accessToken}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Cookie",
												"type": "text",
												"value": "new_station=handheld"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wizard/information-event-hopper/operations?machineName=1CHA1PR7",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"information-event-hopper",
												"operations"
											],
											"query": [
												{
													"key": "machineName",
													"value": "1CHA1PR7"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "details",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlkIjoyLCJsb2NhbGUiOiJlbi1VUyIsImRhdGVGb3JtYXQiOiJkZC5NTS55eXl5IiwiZGF0ZVRpbWVGb3JtYXQiOiJkZC5NTS55eXl5IEhIOm1tOnNzIFNTUyIsImdyb3VwcyI6WyJQbGFudE9wc0FkbWluIl0sImV4cCI6MTU3NjYyMDk2Mn0.1ruH28tvAgO6SfT_zq7iEkGjExCe90qy3vydZO_kYFqTCVyXaT9UpgCLJUDcF7KYMWdQC-VqHnPHacXeBRtoYA",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/wizard/information-event-hopper/details?productionOrder=000101117174&machineName=1CHA1PR7",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"information-event-hopper",
												"details"
											],
											"query": [
												{
													"key": "productionOrder",
													"value": "000101117174"
												},
												{
													"key": "machineName",
													"value": "1CHA1PR7"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "List of wizards",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/wizard/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wizard",
										"list"
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"list"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"list"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"list"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/wizard/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wizard",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Trigger the Demo Do Nothing logic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"shouldFunctionallyFail\": \"<boolean>\",\n    \"shouldTechnicallyFail\": \"<boolean>\",\n    \"souldFailInService\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/demo/doNothing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"demo",
								"doNothing"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldFunctionallyFail\": \"<boolean>\",\n    \"shouldTechnicallyFail\": \"<boolean>\",\n    \"souldFailInService\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/demo/doNothing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"demo",
										"doNothing"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldFunctionallyFail\": \"<boolean>\",\n    \"shouldTechnicallyFail\": \"<boolean>\",\n    \"souldFailInService\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/demo/doNothing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"demo",
										"doNothing"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldFunctionallyFail\": \"<boolean>\",\n    \"shouldTechnicallyFail\": \"<boolean>\",\n    \"souldFailInService\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/demo/doNothing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"demo",
										"doNothing"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldFunctionallyFail\": \"<boolean>\",\n    \"shouldTechnicallyFail\": \"<boolean>\",\n    \"souldFailInService\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/demo/doNothing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"demo",
										"doNothing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shouldFunctionallyFail\": \"<boolean>\",\n    \"shouldTechnicallyFail\": \"<boolean>\",\n    \"souldFailInService\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/demo/doNothing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"demo",
										"doNothing"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve enabled logbook",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logbook/enabled",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logbook",
								"enabled"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logbook/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logbook",
										"enabled"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logbook/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logbook",
										"enabled"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logbook/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logbook",
										"enabled"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logbook/enabled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logbook",
										"enabled"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "getPalletByName",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logistic/pallet?name=00000015012420005039",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logistic",
								"pallet"
							],
							"query": [
								{
									"key": "name",
									"value": "00000015012420005039",
									"description": "name"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logistic/pallet?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logistic",
										"pallet"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logistic/pallet?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logistic",
										"pallet"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logistic/pallet?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logistic",
										"pallet"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logistic/pallet?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logistic",
										"pallet"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List of group with their privileges",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/privilege/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"privilege",
								"groups"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/privilege/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privilege",
										"groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/privilege/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privilege",
										"groups"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/privilege/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privilege",
										"groups"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/privilege/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"privilege",
										"groups"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve the links between the machines and the operations",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/production/machine-operation/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production",
								"machine-operation",
								"all"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/production/machine-operation/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"production",
										"machine-operation",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"empty\": \"<boolean>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/production/machine-operation/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"production",
										"machine-operation",
										"all"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/production/machine-operation/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"production",
										"machine-operation",
										"all"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/production/machine-operation/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"production",
										"machine-operation",
										"all"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "//localhost:8000/runtime",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}